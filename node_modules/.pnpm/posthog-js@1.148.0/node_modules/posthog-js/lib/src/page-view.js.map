{"version":3,"file":"page-view.js","sourceRoot":"","sources":["../../src/page-view.ts"],"names":[],"mappings":"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","sourcesContent":["import { window } from './utils/globals'\nimport { PostHog } from './posthog-core'\nimport { isUndefined } from './utils/type-utils'\n\ninterface PageViewEventProperties {\n    $prev_pageview_pathname?: string\n    $prev_pageview_last_scroll?: number\n    $prev_pageview_last_scroll_percentage?: number\n    $prev_pageview_max_scroll?: number\n    $prev_pageview_max_scroll_percentage?: number\n    $prev_pageview_last_content?: number\n    $prev_pageview_last_content_percentage?: number\n    $prev_pageview_max_content?: number\n    $prev_pageview_max_content_percentage?: number\n}\n\nexport class PageViewManager {\n    _currentPath?: string\n    _instance: PostHog\n\n    constructor(instance: PostHog) {\n        this._instance = instance\n    }\n\n    doPageView(): PageViewEventProperties {\n        const response = this._previousScrollProperties()\n\n        // On a pageview we reset the contexts\n        this._currentPath = window?.location.pathname ?? ''\n        this._instance.scrollManager.resetContext()\n\n        return response\n    }\n\n    doPageLeave(): PageViewEventProperties {\n        return this._previousScrollProperties()\n    }\n\n    private _previousScrollProperties(): PageViewEventProperties {\n        const previousPath = this._currentPath\n        const scrollContext = this._instance.scrollManager.getContext()\n\n        if (!previousPath || !scrollContext) {\n            return {}\n        }\n\n        let { maxScrollHeight, lastScrollY, maxScrollY, maxContentHeight, lastContentY, maxContentY } = scrollContext\n\n        if (\n            isUndefined(maxScrollHeight) ||\n            isUndefined(lastScrollY) ||\n            isUndefined(maxScrollY) ||\n            isUndefined(maxContentHeight) ||\n            isUndefined(lastContentY) ||\n            isUndefined(maxContentY)\n        ) {\n            return {}\n        }\n\n        // Use ceil, so that e.g. scrolling 999.5px of a 1000px page is considered 100% scrolled\n        maxScrollHeight = Math.ceil(maxScrollHeight)\n        lastScrollY = Math.ceil(lastScrollY)\n        maxScrollY = Math.ceil(maxScrollY)\n        maxContentHeight = Math.ceil(maxContentHeight)\n        lastContentY = Math.ceil(lastContentY)\n        maxContentY = Math.ceil(maxContentY)\n\n        // if the maximum scroll height is near 0, then the percentage is 1\n        const lastScrollPercentage = maxScrollHeight <= 1 ? 1 : clamp(lastScrollY / maxScrollHeight, 0, 1)\n        const maxScrollPercentage = maxScrollHeight <= 1 ? 1 : clamp(maxScrollY / maxScrollHeight, 0, 1)\n        const lastContentPercentage = maxContentHeight <= 1 ? 1 : clamp(lastContentY / maxContentHeight, 0, 1)\n        const maxContentPercentage = maxContentHeight <= 1 ? 1 : clamp(maxContentY / maxContentHeight, 0, 1)\n\n        return {\n            $prev_pageview_pathname: previousPath,\n            $prev_pageview_last_scroll: lastScrollY,\n            $prev_pageview_last_scroll_percentage: lastScrollPercentage,\n            $prev_pageview_max_scroll: maxScrollY,\n            $prev_pageview_max_scroll_percentage: maxScrollPercentage,\n            $prev_pageview_last_content: lastContentY,\n            $prev_pageview_last_content_percentage: lastContentPercentage,\n            $prev_pageview_max_content: maxContentY,\n            $prev_pageview_max_content_percentage: maxContentPercentage,\n        }\n    }\n}\n\nfunction clamp(x: number, min: number, max: number) {\n    return Math.max(min, Math.min(x, max))\n}\n"]}